{"_id":"config","order":["e6a8c23d-7881-466d-8261-d500843cf625","2ea144b6-578a-43dd-b597-c1e5051ae50e","72294215-ffb9-4346-9f8a-f843f958394c","0849a493-ad6f-4667-bc58-c4529d1a9873","36782da4-8d6e-4839-9fe5-f89a613a567b","a610d337-d34d-42ad-9be1-445c0df39cd2"]}
{"_id":"0849a493-ad6f-4667-bc58-c4529d1a9873","editorState":"{\"entityMap\":{\"0\":{\"type\":\"MONACO_PRACTICE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"data\":{\"expectedOutput\":\"Hello World.\",\"eid\":\"88e0c322-a5c0-45a9-9029-c194b73dde3f\"}}},\"1\":{\"type\":\"MONACO_PRACTICE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"data\":{\"expectedOutput\":\"Hello World 1.\\nHello World 2.\",\"eid\":\"5942a0d2-bdbe-41b2-b5c5-920bf4b2baf4\"}}}},\"blocks\":[{\"key\":\"sqtl\",\"text\":\"1. Statements.\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4he6n\",\"text\":\"I. Statement\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3fn0c\",\"text\":\"Typescript runs a program statement by statement, one after the other sequentially. Statements are divided either by a ; or a new line \\\\n.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"du72o\",\"text\":\"statement1; statement2\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fuk2r\",\"text\":\"Or\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dmo1k\",\"text\":\"statement1;\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3h1hf\",\"text\":\"statement2;\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"egqdt\",\"text\":\"Each statement performs a task: simple or compound. Simple statement is one that performs one atomic operation. Whereas compound one combines multiple atomic operations to one.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9i5g2\",\"text\":\"One such simple statement is printing a message on the screen. Lets say we want to print 'Hello World' on the screen. The simple statement to do that is:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"430e\",\"text\":\"console.log(\\\"Hello World\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a9snf\",\"text\":\"console.log is a function. \\\"Hello World\\\" is a string parameter to the console.log function. Parameters should be enclosed within brackets. And a statement should end in ;\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"ITALIC\"},{\"offset\":26,\"length\":14,\"style\":\"ITALIC\"},{\"offset\":70,\"length\":11,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2k26d\",\"text\":\"Write the above code and run below to print 'Hello World.' (Press ctrl+enter to evaluate).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ecot\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"s0oh\",\"text\":\"\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c2gjj\",\"text\":\"II. Multiple Statements\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3rnbt\",\"text\":\"If for example if you want to write a program to print 'Hello World.' two times, you can do the same by repeating the same statement 2 times.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"18sli\",\"text\":\"console.log(\\\"Hello World.\\\\n\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8g4p4\",\"text\":\"console.log(\\\"Hello world.\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"841al\",\"text\":\"Now write a program to print \\\"Hello World 1\\\" and then \\\"Hello World 2\\\" as shown below.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fj3ls\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"dfd4s\",\"text\":\"One can also write the same program using single statement using \\\\n instead of separate statement.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9tfl7\",\"text\":\"console.log(\\\"Hello World 1.\\\\nHello World 2.\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dg106\",\"text\":\"Note that, writing 2 statements on single line doesn't make it a single statement.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"apnte\",\"text\":\"Ex:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"17qei\",\"text\":\"console.log(\\\"Hello World.\\\\n\\\"); console.log(\\\"Hello World 2.\\\\n\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"27ms2\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"daf23\",\"text\":\"//is equivalent to\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"89m90\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f4lnp\",\"text\":\"console.log(\\\"Hello World.\\\\n\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"39ljp\",\"text\":\"console.log(\\\"Hello World 2.\\\\n\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adnhb\",\"text\":\"Above program has 2 statements, not one. A statement is separated by ; or newline.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}","title":"2. Statements"}
{"_id":"e6a8c23d-7881-466d-8261-d500843cf625","title":"Intro To Programming","editorState":"{\"entityMap\":{},\"blocks\":[{\"key\":\"c7h3m\",\"text\":\"Dear juniors, with the experience in programming for around 8 years, we're here to guide you with regarding to programming. We always try to be unbiased, by not giving any statements out of our own views. But out of human error if it does, please ignore it and follow your intuition.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":283,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4i8as\",\"text\":\"We're very much open to ideas, views and beliefs. Please feel free to have a discussion with us anytime :)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":106,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"tgdl\",\"text\":\"Intro To Programming\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8nq0j\",\"text\":\"Programming is an art of speaking to a machine. The art indispensable for one to make a computer perform tasks for us.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bmqed\",\"text\":\"With the advent of Machine Learning or Artificial Intelligence, programming may seem obsolete, or even useless. There is even a hot debate over online regarding the same.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dmq0t\",\"text\":\"If Self driving cars can replace manual human drivers, there's no point of learning how to Drive! It may be the case in future, but for now at least, its not. So is the case with programming. ML and AI have lot of promises for the future, everyone is eagerly waiting for... We too are among them.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2u3pu\",\"text\":\"Programming has evolved from writing bit level instructions to the level of abstraction where the language seems very close to human interpretation. But right away, its no equal to human language, and its far far away from that \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d068m\",\"text\":\"https://codewithoutrules.com/2017/02/19/ai-replace-programmers/.\",\"type\":\"header-five\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6imid\",\"text\":\"https://en.wikipedia.org/wiki/Artificial_general_intelligence\",\"type\":\"header-five\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cl5d\",\"text\":\"And that is called an AI Dream. Where human may one day talk to a machine just like we speak to one another. And lets hope for that day soon...\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":22,\"length\":10,\"style\":\"BOLD\"},{\"offset\":22,\"length\":10,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2k9n7\",\"text\":\"If Artificial Intelligence gets to a place where it replaces programmers, then the way human beings interact with a machine would be like\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"56rhm\",\"text\":\"Hey computer, please say Hello World!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bmmt\",\"text\":\"Needless to say, there won't be any need for writing code on keyboard to tell computer what to do!! Voice processing becomes dominant by then!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74aro\",\"text\":\"Its very important to get updated with technologies and trends. So is ML and AI. That wouldn't make programming obsolete, or useless thing to learn, at least not for now according to us.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"50j0\",\"text\":\"For example,\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74k3o\",\"text\":\"console.log(\\\"Hello World.\\\");\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1nbav\",\"text\":\"would make a computer say, Hello World  to us in today's lame world.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":27,\"length\":13,\"style\":\"ITALIC\"},{\"offset\":27,\"length\":13,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8mh0m\",\"text\":\"We would like to focus on students who would like to learn programming and give a chance to see what one can do with it. Just an hour or two, during your free time is enough to master it. Do focus on your academics, latest trends and technologies. We are not here to replace that, but to add additional skills to your repertoire.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dj46t\",\"text\":\"For students who would like to get into career in Software, its our sincere recommendation to learn programming and we are here to guide you.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"67c49\",\"text\":\"Programming in our case is a broad sense in terms of Algorithms, Technologies, learning the internals of Compilers, OS, building products, etc.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ak3c\",\"text\":\"Writing a prime number or a Hello World program doesn't qualify one as a Programmer. Programming in broader sense itself is an art cum science. The tool with which one can do many great things.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":10,\"length\":12,\"style\":\"ITALIC\"},{\"offset\":28,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8lqkl\",\"text\":\"People who would like to join the club, are most welcome.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}"}
{"_id":"a610d337-d34d-42ad-9be1-445c0df39cd2","editorState":"{\"entityMap\":{},\"blocks\":[{\"key\":\"djelt\",\"text\":\"Variables\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4qvc2\",\"text\":\"A variable is a storage block where you can store a value, change the value and get/retrieve the value.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8op38\",\"text\":\"A variable has a name, and a value to be assigned.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5a3sl\",\"text\":\"For example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9br3h\",\"text\":\"let myname = \\\"Kishore\\\";\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8918v\",\"text\":\"Here let is a keyword, myname is a variable name, = is an assignment operator and \\\"Kishore\\\" is a value of string datatype, one in many data types typescript supports.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":5,\"length\":3,\"style\":\"ITALIC\"},{\"offset\":23,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":50,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":82,\"length\":9,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"83hbn\",\"text\":\"Typescript is a statically typed language. Which means, once a type is assigned to a variable, it sticks with it forever. One cannot assign a number to the variable myname ever again. Compiler shows an error in that case.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":165,\"length\":6,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4gh1v\",\"text\":\"I. Declaration vs Initialisation\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"83kh5\",\"text\":\"Declaration:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6i2d8\",\"text\":\"A variable needs to be declared before it can be used.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cjg6e\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2tqap\",\"text\":\"let a: string; // Variable a declared of type string.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9gg72\",\"text\":\"Variable declaration include\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bd1mq\",\"text\":\"let variable_name: variable_type;\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4b7ok\",\"text\":\"variable_name is any valid variable name. a, b, c etc.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bu3jq\",\"text\":\"variable_type is any of valid typescript datatype: string, number, boolean etc.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":51,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":59,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":67,\"length\":8,\"style\":\"ITALIC\"},{\"offset\":78,\"length\":1,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4da6f\",\"text\":\"Once a variable is declared a type, any other value with some other datatype should not be assigned to it.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ip4p\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cnqm2\",\"text\":\"let a: string = \\\"String here\\\";\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"252m7\",\"text\":\"a = 123; // THIS IS AN ERROR. Type string cannot be assigned to number.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3nafv\",\"text\":\"Initialisation:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a1rf\",\"text\":\"Variable that was assigned a value at the time of declaration itself is said to be initialised. When initialised, a type need not be mentioned. It becomes optional.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"14lj6\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cr84i\",\"text\":\"// Both are same here.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fkvfr\",\"text\":\"let a = \\\"A string value goes here...\\\";\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qh1j\",\"text\":\"let a: string = \\\"A string value goes here...\\\": // Declaring explicitly as string here is redundant.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2q2rl\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d912v\",\"text\":\"// This is not initialisation.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"411sb\",\"text\":\"let a: string; // Value should be assigned here for it to be called initialisation.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"76ame\",\"text\":\"a = \\\"A string value goes here...\\\"; // Here value is assigned not initialised.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6rrlv\",\"text\":\"Take Away:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a846o\",\"text\":\"When a variable is declared without initialisation, type should be explicitly mentioned.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dnddt\",\"text\":\"When a variable is declared with initialisation, type is implicitly assigned, no need of declaring type explicitly there.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6jjb5\",\"text\":\"Without declaring a variable, it shouldn't be used anywhere in the program.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1cfvm\",\"text\":\"All the variables used in a program should be declared before hand.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6lnso\",\"text\":\"II. Data Types\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1n9ti\",\"text\":\"Following data types are supported by Typescript.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"81q65\",\"text\":\"Boolean\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8gblr\",\"text\":\"Number\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jd5o\",\"text\":\"String\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e7q1n\",\"text\":\"Function\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"chtjd\",\"text\":\"Object\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"34qfn\",\"text\":\"null\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbono\",\"text\":\"undefined\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}","title":"4. Variables"}
{"_id":"2ea144b6-578a-43dd-b597-c1e5051ae50e","editorState":"{\"entityMap\":{},\"blocks\":[{\"key\":\"7cpv0\",\"text\":\"Why Typescript\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a8fs2\",\"text\":\"Typescript was developed by Microsoft an an extension for Javascript. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1vhi\",\"text\":\"Javascript + Types = Typescript.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ablor\",\"text\":\"In the recent years, Javascript has become a de-facto standard of web, and with the advent of server side Javascript like NodeJS, its popularity has skyrocketed.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8nn8\",\"text\":\"Apart from practical importance, Typescript has a lot of language features that has immense importance in the perspective of learning too.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c7tl9\",\"text\":\"Typescript embraces:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6f69o\",\"text\":\"Static typing and Dynamically typed\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f9rlp\",\"text\":\"Functional programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1rhe2\",\"text\":\"Object Oriented programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1c55\",\"text\":\"Procedural Programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8fp77\",\"text\":\"Event Driven Programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1akh5\",\"text\":\"Asynchronous Programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"brlkc\",\"text\":\"High-level\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9jtuj\",\"text\":\"Dynamic\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4lqss\",\"text\":\"prototype-based, multi-paradigm, and interpreted programming language\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ibcv\",\"text\":\"Learning typescript not only eases your learning approach, but also gives you a lot of insight in the context of programming.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqt2h\",\"text\":\"Some things one can do with typescript include:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdr3h\",\"text\":\"Graphics (2D and 3D)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ldfm\",\"text\":\"Client Server Programming\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"30gu5\",\"text\":\"Developing JSON based Rest API's for database, data mining, or any server intensive tasks.\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9i5r9\",\"text\":\"Creating Web, Desktop, Mobile Apps.\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9dclp\",\"text\":\"Typescript is not for solving ML problems, or server side DBMS tasks. Its use case is mostly limited to Front end, but as a platform for learning and showcasing one's programming skills, this language truly stands out.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aqr8t\",\"text\":\"If you are OK with programming and have a doubt of where to move from there on... Or if you do not have any knowledge in programming... Do make the best use of this opportunity to learn programming with Typescript.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}","title":"Why Typescript"}
{"_id":"36782da4-8d6e-4839-9fe5-f89a613a567b","editorState":"{\"entityMap\":{\"0\":{\"type\":\"MONACO_PRACTICE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"data\":{\"expectedOutput\":\"4218900\",\"eid\":\"b624b8c1-ec83-421d-8f23-177409126a06\"}}}},\"blocks\":[{\"key\":\"fclqd\",\"text\":\"Data Types\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6r3qj\",\"text\":\"There are basically 3 basic data types in Typescript. They include:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"98qgq\",\"text\":\"Number\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a20bj\",\"text\":\"Boolean\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1r1ae\",\"text\":\"String\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c5ha8\",\"text\":\"These are very important ones to master, before going to compound data types.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ap0r9\",\"text\":\"I. Number\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ofa4\",\"text\":\"Number is the basic data type in any programming language. Whatever mathematical operations you want to do with numbers, can be performed here.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9fkbu\",\"text\":\"Arithmetic operations.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a8sva\",\"text\":\"Comparison Operations.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9edl2\",\"text\":\"Arithmetic operations include, addition, subtraction, division, modulus, multiplication.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64f0m\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ch7ap\",\"text\":\"1+2+100; // Gives 103\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"uhnj\",\"text\":\"Write a program to print the value of 100*123*343 on the console. Please don't print the same output using console.log(4218900).\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c2fbt\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"96qsg\",\"text\":\"Valid number operations include\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2sjqj\",\"text\":\"Arithmetic operations using Arithmetic operators (+, -, *, /, %)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"187m3\",\"text\":\"Comparison operators using Comparison operators (==, !=, \u003c, \u003e, \u003c=, \u003e=)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dctfj\",\"text\":\"// Arithmetic operations include (Returns a number after the operation)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6haa8\",\"text\":\"a+b // Adds a and b\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7604\",\"text\":\"a-b // Subtracts b from a\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3hdsg\",\"text\":\"a*b // multiplies a and b\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b0emq\",\"text\":\"a/b // divides b from a\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"agu18\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d85i7\",\"text\":\"// Comparison operators include (Returns a boolean after the operation)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2igmk\",\"text\":\"a==b // Checks if a is equal to b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"91h46\",\"text\":\"a!=b // Checks if a is not equal to b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"19drd\",\"text\":\"a\u003cb // Checks if a less than b\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3qtfi\",\"text\":\"a\u003c=b // Checks if a less than or equal to b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"690v4\",\"text\":\"a\u003eb // Checks if a greater than b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6irfv\",\"text\":\"a\u003e=b // Checks if a greater than or equal to b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6dt8t\",\"text\":\"II. Boolean\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9d99\",\"text\":\"Boolean tells the truth of any operation in language. It includes the values either true or false\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":84,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":92,\"length\":5,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5os6d\",\"text\":\"This is a very important datatype to master programming.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8gn79\",\"text\":\"Boolean can the result of a question asked to the language. If asked the language if number 2 is equal to number 2.0 then the language says true. Which means number 2 is equal to 2.0.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d6l16\",\"text\":\"Predicate logic in Discrete Mathematics applies to boolean values.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"di6t0\",\"text\":\"Valid boolean operations include\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4kdhc\",\"text\":\"AND, OR, NEGATION. (\u0026\u0026, ||, !)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"14tst\",\"text\":\"// AND Predicate\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5rh3o\",\"text\":\"true \u0026\u0026 true // true\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"brgjh\",\"text\":\"true \u0026\u0026 false // false\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7s3b3\",\"text\":\"false \u0026\u0026 true // false\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5s134\",\"text\":\"false \u0026\u0026 false // false\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bl0jn\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"euc2f\",\"text\":\"// OR Predicate\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b5lgf\",\"text\":\"true || true // true\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7p2en\",\"text\":\"true || false // true\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5e12e\",\"text\":\"false || true // true\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2rrsi\",\"text\":\"false || false // false\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9l9s8\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"92ido\",\"text\":\"// NOT Operation\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dppbu\",\"text\":\"!true // false\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4vdkg\",\"text\":\"!false // true\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5bc6r\",\"text\":\"\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"31ilq\",\"text\":\"III. Strings\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"70g45\",\"text\":\"String is an immutable type in Typescript. What does it mean? There are two types of values. Mutable and Immutable type. (Maybe referred to as value type and reference type at other places). Generally, compound data types (Objects, arrays etc.) are Mutable and basic data types (number, boolean etc.) are immutable.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"75snl\",\"text\":\"For contrast example, strings in C language are Mutable, not Immutable.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1kbvg\",\"text\":\"Mutable value is the one, that changes value on operation and returns the same object as result. Whereas Immutable value is the one that returns a new object when done an operation on the value.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"602cq\",\"text\":\"Ex:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bgsbb\",\"text\":\"let a = \\\"Hello World.\\\";\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bgbkf\",\"text\":\"let b = a;\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a4m8m\",\"text\":\"b = \\\"Hey.\\\";\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fvirs\",\"text\":\"console.log(a,b); // Hello World.Hey.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7d3c4\",\"text\":\"// Note that value of a is not modified on changing b.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7a71l\",\"text\":\"We shall discuss about mutability and immutability latter in separate chapter.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4gj7v\",\"text\":\"The valid string operations include:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9629c\",\"text\":\"// Append operation.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8a01t\",\"text\":\"\\\"Hello\\\" + \\\"World\\\" // \\\"HelloWorld\\\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"en8sa\",\"text\":\"We shall look at strings later exclusively as a separate chapter.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ho2q\",\"text\":\"PRACTICE:\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"11th5\",\"text\":\"Practice the different operations on different data types in typescript playground. All these operations will be used in next chapter in variables.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"59ese\",\"text\":\"Take Away:\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8bm26\",\"text\":\"Each datatype have limited number of valid operations that can be carried on.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9vtsf\",\"text\":\"Its very important to know what datatype one is working on, before performing an operation.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"68v7f\",\"text\":\"For example true + true doesn't make sense. Likewise \\\"Hello\\\"*3 doesn't make sense.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}","title":"3. Data Types"}
{"_id":"72294215-ffb9-4346-9f8a-f843f958394c","editorState":"{\"entityMap\":{\"0\":{\"type\":\"MONACO_PRACTICE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"data\":{\"expectedOutput\":\"We love our juniors.\\nWe respect our seniors.\",\"eid\":\"5c78bb07-7910-4716-95c7-7104dade406f\"}}}},\"blocks\":[{\"key\":\"4khp9\",\"text\":\"Working with console\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aqht5\",\"text\":\"One of the most important things one should know when learning a programming language is writing a hello world program. This is a trivial way of learning how to make the computer interact with us using the programming language we are using.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74to8\",\"text\":\"In typescript we use, console.log function to print the output on screen.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fmqps\",\"text\":\"The syntax for using the function is...\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5k29\",\"text\":\"console.log(value_to_be_printed);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7o53c\",\"text\":\"Here value_to_be_printed can be any valid typescript constant value or a variable that contains a value.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"563lo\",\"text\":\"Example:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f2s2e\",\"text\":\"console.log(\\\"We love our juniors.\\\"); // We love our juniors.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cieop\",\"text\":\"console.log(1+2+3); // 6\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dcfc4\",\"text\":\"console.log(true); // Prints true.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jed0\",\"text\":\"console.log(\\\"We respect our seniors.\\\"); // We respect our seniors.\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1f14\",\"text\":\"Now complete the below program to print above statements and press ctrl+enter to evaluate.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7msue\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"961uh\",\"text\":\"You can always play with console using Typescript playground in the portal. Give it a try.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}]}","title":"1. Working with console."}
